<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="68" total="132" passed="63">
  <reporter-output>
  </reporter-output>
  <suite name="RTA_OneRequest_Complete_Vehicle_Data" duration-ms="242225" started-at="2023-01-31T11:04:06 EET" finished-at="2023-01-31T11:08:09 EET">
    <groups>
    </groups>
    <test name="login" duration-ms="242225" started-at="2023-01-31T11:04:06 EET" finished-at="2023-01-31T11:08:09 EET">
      <class name="RTA.RTATest">
        <test-method status="PASS" signature="confirmlocation()[pri:2, instance:RTA.RTATest@ea6137]" name="confirmlocation" duration-ms="18927" started-at="2023-01-31T11:04:40 EET" finished-at="2023-01-31T11:04:59 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmlocation -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.RTATest@ea6137]" name="afterMethod" is-config="true" duration-ms="1427" started-at="2023-01-31T11:04:59 EET" finished-at="2023-01-31T11:05:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.RTATest.confirmlocation()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=confirmlocation status=SUCCESS method=RTATest.confirmlocation()[pri:2, instance:RTA.RTATest@ea6137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="selectSubService()[pri:3, instance:RTA.RTATest@ea6137]" name="selectSubService" duration-ms="700" started-at="2023-01-31T11:05:01 EET" finished-at="2023-01-31T11:05:01 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- selectSubService -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.RTATest@ea6137]" name="afterMethod" is-config="true" duration-ms="1464" started-at="2023-01-31T11:05:01 EET" finished-at="2023-01-31T11:05:03 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.RTATest.selectSubService()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=selectSubService status=SUCCESS method=RTATest.selectSubService()[pri:3, instance:RTA.RTATest@ea6137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="confirmSubService()[pri:4, instance:RTA.RTATest@ea6137]" name="confirmSubService" duration-ms="271" started-at="2023-01-31T11:05:03 EET" finished-at="2023-01-31T11:05:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmSubService -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.RTATest@ea6137]" name="afterMethod" is-config="true" duration-ms="1433" started-at="2023-01-31T11:05:03 EET" finished-at="2023-01-31T11:05:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.RTATest.confirmSubService()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=confirmSubService status=SUCCESS method=RTATest.confirmSubService()[pri:4, instance:RTA.RTATest@ea6137] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.RTATest -->
      <class name="RTA.chassisNumberTest">
        <test-method status="PASS" signature="ChassisNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:RTA.chassisNumberTest@e12bac]" name="ChassisNumberTest" duration-ms="320" started-at="2023-01-31T11:07:06 EET" data-provider="CompleteVehicleData" finished-at="2023-01-31T11:07:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[EDAH6666888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amira Kamal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[011156612121]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656596]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8787]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[court]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Reason]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[667]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[adding notes in General ]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Adding Custody Notes In custody]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ChassisNumberTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.chassisNumberTest@e12bac]" name="afterMethod" is-config="true" duration-ms="1476" started-at="2023-01-31T11:07:06 EET" finished-at="2023-01-31T11:07:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.chassisNumberTest.ChassisNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ChassisNumberTest status=SUCCESS method=chassisNumberTest.ChassisNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:RTA.chassisNumberTest@e12bac] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.chassisNumberTest -->
      <class name="RTA.DropOffTest">
        <test-method status="PASS" signature="confirmdropOff()[pri:3, instance:RTA.DropOffTest@67a849]" name="confirmdropOff" duration-ms="731" started-at="2023-01-31T11:05:17 EET" finished-at="2023-01-31T11:05:18 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmdropOff -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.DropOffTest@67a849]" name="afterMethod" is-config="true" duration-ms="1448" started-at="2023-01-31T11:05:18 EET" finished-at="2023-01-31T11:05:19 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.DropOffTest.confirmdropOff()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=confirmdropOff status=SUCCESS method=DropOffTest.confirmdropOff()[pri:3, instance:RTA.DropOffTest@67a849] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.DropOffTest -->
      <class name="RTA.ReasonTest">
        <test-method status="PASS" signature="ClickReasondropdown()[pri:1, instance:RTA.ReasonTest@5f1e4e]" name="ClickReasondropdown" duration-ms="136" started-at="2023-01-31T11:07:33 EET" finished-at="2023-01-31T11:07:34 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickReasondropdown -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ReasonTest@5f1e4e]" name="afterMethod" is-config="true" duration-ms="1439" started-at="2023-01-31T11:07:34 EET" finished-at="2023-01-31T11:07:35 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ReasonTest.ClickReasondropdown()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickReasondropdown status=SUCCESS method=ReasonTest.ClickReasondropdown()[pri:1, instance:RTA.ReasonTest@5f1e4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SelectItem()[pri:2, instance:RTA.ReasonTest@5f1e4e]" name="SelectItem" duration-ms="231" started-at="2023-01-31T11:07:35 EET" finished-at="2023-01-31T11:07:35 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectItem -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ReasonTest@5f1e4e]" name="afterMethod" is-config="true" duration-ms="1445" started-at="2023-01-31T11:07:35 EET" finished-at="2023-01-31T11:07:37 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ReasonTest.SelectItem()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectItem status=SUCCESS method=ReasonTest.SelectItem()[pri:2, instance:RTA.ReasonTest@5f1e4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="clickSave()[pri:3, instance:RTA.ReasonTest@5f1e4e]" name="clickSave" duration-ms="209" started-at="2023-01-31T11:07:37 EET" finished-at="2023-01-31T11:07:37 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickSave -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ReasonTest@5f1e4e]" name="afterMethod" is-config="true" duration-ms="1465" started-at="2023-01-31T11:07:37 EET" finished-at="2023-01-31T11:07:38 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ReasonTest.clickSave()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickSave status=SUCCESS method=ReasonTest.clickSave()[pri:3, instance:RTA.ReasonTest@5f1e4e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.ReasonTest -->
      <class name="RTA.CaptureVehicleImageTest">
        <test-method status="PASS" signature="ClicktakeImage()[pri:1, instance:RTA.CaptureVehicleImageTest@67a738]" name="ClicktakeImage" duration-ms="9961" started-at="2023-01-31T11:05:41 EET" finished-at="2023-01-31T11:05:51 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClicktakeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="2526" started-at="2023-01-31T11:05:51 EET" finished-at="2023-01-31T11:05:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.ClicktakeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClicktakeImage status=SUCCESS method=CaptureVehicleImageTest.ClicktakeImage()[pri:1, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="cameraTakeImage()[pri:3, instance:RTA.CaptureVehicleImageTest@67a738]" name="cameraTakeImage" duration-ms="1193" started-at="2023-01-31T11:05:54 EET" finished-at="2023-01-31T11:05:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cameraTakeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="3221" started-at="2023-01-31T11:05:55 EET" finished-at="2023-01-31T11:05:58 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.cameraTakeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=cameraTakeImage status=SUCCESS method=CaptureVehicleImageTest.cameraTakeImage()[pri:3, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmImage()[pri:4, instance:RTA.CaptureVehicleImageTest@67a738]" name="ConfirmImage" duration-ms="388" started-at="2023-01-31T11:05:58 EET" finished-at="2023-01-31T11:05:58 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="1352" started-at="2023-01-31T11:05:58 EET" finished-at="2023-01-31T11:06:00 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.ConfirmImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmImage status=SUCCESS method=CaptureVehicleImageTest.ConfirmImage()[pri:4, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="clcikContentImage()[pri:5, instance:RTA.CaptureVehicleImageTest@67a738]" name="clcikContentImage" duration-ms="780" started-at="2023-01-31T11:06:00 EET" finished-at="2023-01-31T11:06:00 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikContentImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="1542" started-at="2023-01-31T11:06:00 EET" finished-at="2023-01-31T11:06:02 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.clcikContentImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikContentImage status=SUCCESS method=CaptureVehicleImageTest.clcikContentImage()[pri:5, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="delImage()[pri:6, instance:RTA.CaptureVehicleImageTest@67a738]" name="delImage" duration-ms="216" started-at="2023-01-31T11:06:02 EET" finished-at="2023-01-31T11:06:02 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- delImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="1399" started-at="2023-01-31T11:06:02 EET" finished-at="2023-01-31T11:06:04 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.delImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=delImage status=SUCCESS method=CaptureVehicleImageTest.delImage()[pri:6, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClicktakeImage2()[pri:7, instance:RTA.CaptureVehicleImageTest@67a738]" name="ClicktakeImage2" duration-ms="224" started-at="2023-01-31T11:06:04 EET" finished-at="2023-01-31T11:06:04 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClicktakeImage2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="3002" started-at="2023-01-31T11:06:04 EET" finished-at="2023-01-31T11:06:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.ClicktakeImage2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClicktakeImage2 status=SUCCESS method=CaptureVehicleImageTest.ClicktakeImage2()[pri:7, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="cameraTakeImage2()[pri:8, instance:RTA.CaptureVehicleImageTest@67a738]" name="cameraTakeImage2" duration-ms="1171" started-at="2023-01-31T11:06:07 EET" finished-at="2023-01-31T11:06:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cameraTakeImage2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="3161" started-at="2023-01-31T11:06:08 EET" finished-at="2023-01-31T11:06:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.cameraTakeImage2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=cameraTakeImage2 status=SUCCESS method=CaptureVehicleImageTest.cameraTakeImage2()[pri:8, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmImage2()[pri:9, instance:RTA.CaptureVehicleImageTest@67a738]" name="ConfirmImage2" duration-ms="343" started-at="2023-01-31T11:06:11 EET" finished-at="2023-01-31T11:06:12 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmImage2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="1379" started-at="2023-01-31T11:06:12 EET" finished-at="2023-01-31T11:06:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.ConfirmImage2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmImage2 status=SUCCESS method=CaptureVehicleImageTest.ConfirmImage2()[pri:9, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="clcikContentImage2()[pri:10, instance:RTA.CaptureVehicleImageTest@67a738]" name="clcikContentImage2" duration-ms="704" started-at="2023-01-31T11:06:13 EET" finished-at="2023-01-31T11:06:14 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikContentImage2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="1515" started-at="2023-01-31T11:06:14 EET" finished-at="2023-01-31T11:06:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.clcikContentImage2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikContentImage2 status=SUCCESS method=CaptureVehicleImageTest.clcikContentImage2()[pri:10, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="RetakeImage()[pri:11, instance:RTA.CaptureVehicleImageTest@67a738]" name="RetakeImage" duration-ms="246" started-at="2023-01-31T11:06:15 EET" finished-at="2023-01-31T11:06:15 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- RetakeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="2552" started-at="2023-01-31T11:06:15 EET" finished-at="2023-01-31T11:06:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.RetakeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=RetakeImage status=SUCCESS method=CaptureVehicleImageTest.RetakeImage()[pri:11, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="cameraTakeImage3()[pri:12, instance:RTA.CaptureVehicleImageTest@67a738]" name="cameraTakeImage3" duration-ms="1223" started-at="2023-01-31T11:06:18 EET" finished-at="2023-01-31T11:06:19 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cameraTakeImage3 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="3313" started-at="2023-01-31T11:06:19 EET" finished-at="2023-01-31T11:06:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.cameraTakeImage3()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=cameraTakeImage3 status=SUCCESS method=CaptureVehicleImageTest.cameraTakeImage3()[pri:12, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmImage3()[pri:13, instance:RTA.CaptureVehicleImageTest@67a738]" name="ConfirmImage3" duration-ms="500" started-at="2023-01-31T11:06:22 EET" finished-at="2023-01-31T11:06:23 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmImage3 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.CaptureVehicleImageTest@67a738]" name="afterMethod" is-config="true" duration-ms="1415" started-at="2023-01-31T11:06:23 EET" finished-at="2023-01-31T11:06:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.CaptureVehicleImageTest.ConfirmImage3()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmImage3 status=SUCCESS method=CaptureVehicleImageTest.ConfirmImage3()[pri:13, instance:RTA.CaptureVehicleImageTest@67a738] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.CaptureVehicleImageTest -->
      <class name="RTA.VehicleMakeAndModelTest">
        <test-method status="PASS" signature="SelectMakeTest()[pri:1, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="SelectMakeTest" duration-ms="545" started-at="2023-01-31T11:06:24 EET" finished-at="2023-01-31T11:06:25 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectMakeTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="afterMethod" is-config="true" duration-ms="1523" started-at="2023-01-31T11:06:25 EET" finished-at="2023-01-31T11:06:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.VehicleMakeAndModelTest.SelectMakeTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectMakeTest status=SUCCESS method=VehicleMakeAndModelTest.SelectMakeTest()[pri:1, instance:RTA.VehicleMakeAndModelTest@f0f1be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="dragsheetTest()[pri:2, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="dragsheetTest" duration-ms="1085" started-at="2023-01-31T11:06:26 EET" finished-at="2023-01-31T11:06:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dragsheetTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="afterMethod" is-config="true" duration-ms="1441" started-at="2023-01-31T11:06:28 EET" finished-at="2023-01-31T11:06:29 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.VehicleMakeAndModelTest.dragsheetTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=dragsheetTest status=SUCCESS method=VehicleMakeAndModelTest.dragsheetTest()[pri:2, instance:RTA.VehicleMakeAndModelTest@f0f1be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="FAIL" signature="SelectMakeItemTest()[pri:3, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="SelectMakeItemTest" duration-ms="15563" started-at="2023-01-31T11:06:29 EET" finished-at="2023-01-31T11:06:45 EET">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Can't locate an element by this strategy: By.chained({By.xpath: //android.widget.FrameLayout/android.view.ViewGroup/android.widget.LinearLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.view.ViewGroup})]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Can't locate an element by this strategy: By.chained({By.xpath: //android.widget.FrameLayout/android.view.ViewGroup/android.widget.LinearLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.view.ViewGroup})
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:126)
at io.appium.java_client.pagefactory.interceptors.InterceptorOfASingleElement.intercept(InterceptorOfASingleElement.java:59)
at io.appium.java_client.android.AndroidElement$$EnhancerByCGLIB$$b598166c.click(<generated>)
at com.ERA.screens.CompleteVehicleDataScreen.selectMakeitem(CompleteVehicleDataScreen.java:54)
at RTA.VehicleMakeAndModelTest.SelectMakeItemTest(VehicleMakeAndModelTest.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1259)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.TimeoutException: Expected condition failed: waiting for io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction@1787b64 (tried for 1 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.FluentWait.timeoutException(FluentWait.java:304)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at io.appium.java_client.pagefactory.AppiumElementLocator.waitFor(AppiumElementLocator.java:99)
at io.appium.java_client.pagefactory.AppiumElementLocator.findElement(AppiumElementLocator.java:119)
... 32 more
Caused by: org.openqa.selenium.NoSuchElementException: Cannot locate an element using By.chained({By.xpath: //android.widget.FrameLayout/android.view.ViewGroup/android.widget.LinearLayout/android.widget.FrameLayout/android.view.ViewGroup/androidx.recyclerview.widget.RecyclerView/android.widget.FrameLayout[1]/android.view.ViewGroup})
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'AS-40', ip: '192.168.80.157', os.name: 'Windows 10', os.arch: 'x86', os.version: '10.0', java.version: '1.8.0_352-352'
Driver info: driver.version: AndroidDriver
at io.appium.java_client.pagefactory.bys.builder.ByChained.findElement(ByChained.java:74)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.bys.ContentMappedBy.findElement(ContentMappedBy.java:50)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:58)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at io.appium.java_client.pagefactory.AppiumElementLocator.lambda$0(AppiumElementLocator.java:120)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:172)
at io.appium.java_client.pagefactory.AppiumElementLocator$WaitingFunction.apply(AppiumElementLocator.java:1)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 34 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectMakeItemTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="afterMethod" is-config="true" duration-ms="1468" started-at="2023-01-31T11:06:45 EET" finished-at="2023-01-31T11:06:46 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.VehicleMakeAndModelTest.SelectMakeItemTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectMakeItemTest status=FAILURE method=VehicleMakeAndModelTest.SelectMakeItemTest()[pri:3, instance:RTA.VehicleMakeAndModelTest@f0f1be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SelectModelTest()[pri:4, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="SelectModelTest" duration-ms="9180" started-at="2023-01-31T11:06:46 EET" finished-at="2023-01-31T11:06:55 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectModelTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="afterMethod" is-config="true" duration-ms="1449" started-at="2023-01-31T11:06:55 EET" finished-at="2023-01-31T11:06:57 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.VehicleMakeAndModelTest.SelectModelTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectModelTest status=SUCCESS method=VehicleMakeAndModelTest.SelectModelTest()[pri:4, instance:RTA.VehicleMakeAndModelTest@f0f1be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SelectModelItemTest()[pri:5, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="SelectModelItemTest" duration-ms="1021" started-at="2023-01-31T11:06:57 EET" finished-at="2023-01-31T11:06:58 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectModelItemTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="afterMethod" is-config="true" duration-ms="1513" started-at="2023-01-31T11:06:58 EET" finished-at="2023-01-31T11:06:59 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.VehicleMakeAndModelTest.SelectModelItemTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectModelItemTest status=SUCCESS method=VehicleMakeAndModelTest.SelectModelItemTest()[pri:5, instance:RTA.VehicleMakeAndModelTest@f0f1be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="scrolldownTest()[pri:6, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="scrolldownTest" duration-ms="686" started-at="2023-01-31T11:06:59 EET" finished-at="2023-01-31T11:07:00 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- scrolldownTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.VehicleMakeAndModelTest@f0f1be]" name="afterMethod" is-config="true" duration-ms="1372" started-at="2023-01-31T11:07:00 EET" finished-at="2023-01-31T11:07:01 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.VehicleMakeAndModelTest.scrolldownTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=scrolldownTest status=SUCCESS method=VehicleMakeAndModelTest.scrolldownTest()[pri:6, instance:RTA.VehicleMakeAndModelTest@f0f1be] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.VehicleMakeAndModelTest -->
      <class name="RTA.SummeryHappyPathTest">
        <test-method status="PASS" signature="confirmSummery()[pri:1, instance:RTA.SummeryHappyPathTest@1d5872c]" name="confirmSummery" duration-ms="20304" started-at="2023-01-31T11:05:19 EET" finished-at="2023-01-31T11:05:40 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmSummery -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.SummeryHappyPathTest@1d5872c]" name="afterMethod" is-config="true" duration-ms="1390" started-at="2023-01-31T11:05:40 EET" finished-at="2023-01-31T11:05:41 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.SummeryHappyPathTest.confirmSummery()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=confirmSummery status=SUCCESS method=SummeryHappyPathTest.confirmSummery()[pri:1, instance:RTA.SummeryHappyPathTest@1d5872c] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.SummeryHappyPathTest -->
      <class name="RTA.PlatedataTest">
        <test-method status="PASS" signature="ClickEmirateListTest()[pri:1, instance:RTA.PlatedataTest@15710fc]" name="ClickEmirateListTest" duration-ms="239" started-at="2023-01-31T11:07:15 EET" finished-at="2023-01-31T11:07:15 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickEmirateListTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1440" started-at="2023-01-31T11:07:15 EET" finished-at="2023-01-31T11:07:17 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ClickEmirateListTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickEmirateListTest status=SUCCESS method=PlatedataTest.ClickEmirateListTest()[pri:1, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickEmirateListItemTest()[pri:2, instance:RTA.PlatedataTest@15710fc]" name="ClickEmirateListItemTest" duration-ms="209" started-at="2023-01-31T11:07:17 EET" finished-at="2023-01-31T11:07:17 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickEmirateListItemTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1457" started-at="2023-01-31T11:07:17 EET" finished-at="2023-01-31T11:07:18 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ClickEmirateListItemTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickEmirateListItemTest status=SUCCESS method=PlatedataTest.ClickEmirateListItemTest()[pri:2, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickCodeListTest()[pri:3, instance:RTA.PlatedataTest@15710fc]" name="ClickCodeListTest" duration-ms="291" started-at="2023-01-31T11:07:18 EET" finished-at="2023-01-31T11:07:18 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickCodeListTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1455" started-at="2023-01-31T11:07:18 EET" finished-at="2023-01-31T11:07:20 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ClickCodeListTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickCodeListTest status=SUCCESS method=PlatedataTest.ClickCodeListTest()[pri:3, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickcodeItemListTest()[pri:4, instance:RTA.PlatedataTest@15710fc]" name="ClickcodeItemListTest" duration-ms="331" started-at="2023-01-31T11:07:20 EET" finished-at="2023-01-31T11:07:20 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickcodeItemListTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1463" started-at="2023-01-31T11:07:20 EET" finished-at="2023-01-31T11:07:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ClickcodeItemListTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickcodeItemListTest status=SUCCESS method=PlatedataTest.ClickcodeItemListTest()[pri:4, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="AddPlateNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:RTA.PlatedataTest@15710fc]" name="AddPlateNumberTest" duration-ms="283" started-at="2023-01-31T11:07:22 EET" data-provider="CompleteVehicleData" finished-at="2023-01-31T11:07:22 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[EDAH6666888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amira Kamal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[011156612121]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656596]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8787]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[court]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Reason]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[667]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[adding notes in General ]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Adding Custody Notes In custody]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPlateNumberTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1435" started-at="2023-01-31T11:07:22 EET" finished-at="2023-01-31T11:07:23 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.AddPlateNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AddPlateNumberTest status=SUCCESS method=PlatedataTest.AddPlateNumberTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SwitchToggleOffTest()[pri:6, instance:RTA.PlatedataTest@15710fc]" name="SwitchToggleOffTest" duration-ms="169" started-at="2023-01-31T11:07:23 EET" finished-at="2023-01-31T11:07:24 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchToggleOffTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1433" started-at="2023-01-31T11:07:24 EET" finished-at="2023-01-31T11:07:25 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.SwitchToggleOffTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SwitchToggleOffTest status=SUCCESS method=PlatedataTest.SwitchToggleOffTest()[pri:6, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SwitchToggleONTest()[pri:7, instance:RTA.PlatedataTest@15710fc]" name="SwitchToggleONTest" duration-ms="238" started-at="2023-01-31T11:07:25 EET" finished-at="2023-01-31T11:07:25 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SwitchToggleONTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1451" started-at="2023-01-31T11:07:25 EET" finished-at="2023-01-31T11:07:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.SwitchToggleONTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SwitchToggleONTest status=SUCCESS method=PlatedataTest.SwitchToggleONTest()[pri:7, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickEmirateListTest2()[pri:8, instance:RTA.PlatedataTest@15710fc]" name="ClickEmirateListTest2" duration-ms="231" started-at="2023-01-31T11:07:27 EET" finished-at="2023-01-31T11:07:27 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickEmirateListTest2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1463" started-at="2023-01-31T11:07:27 EET" finished-at="2023-01-31T11:07:28 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ClickEmirateListTest2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickEmirateListTest2 status=SUCCESS method=PlatedataTest.ClickEmirateListTest2()[pri:8, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickEmirateListItemTest2()[pri:9, instance:RTA.PlatedataTest@15710fc]" name="ClickEmirateListItemTest2" duration-ms="177" started-at="2023-01-31T11:07:28 EET" finished-at="2023-01-31T11:07:29 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickEmirateListItemTest2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1432" started-at="2023-01-31T11:07:29 EET" finished-at="2023-01-31T11:07:30 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ClickEmirateListItemTest2()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickEmirateListItemTest2 status=SUCCESS method=PlatedataTest.ClickEmirateListItemTest2()[pri:9, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="AddPlateNumberTest2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:RTA.PlatedataTest@15710fc]" name="AddPlateNumberTest2" duration-ms="223" started-at="2023-01-31T11:07:30 EET" data-provider="CompleteVehicleData" finished-at="2023-01-31T11:07:30 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[EDAH6666888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amira Kamal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[011156612121]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656596]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8787]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[court]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Reason]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[667]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[adding notes in General ]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Adding Custody Notes In custody]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddPlateNumberTest2 -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1407" started-at="2023-01-31T11:07:30 EET" finished-at="2023-01-31T11:07:32 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.AddPlateNumberTest2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AddPlateNumberTest2 status=SUCCESS method=PlatedataTest.AddPlateNumberTest2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:11, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmplatedataTest()[pri:12, instance:RTA.PlatedataTest@15710fc]" name="ConfirmplatedataTest" duration-ms="288" started-at="2023-01-31T11:07:32 EET" finished-at="2023-01-31T11:07:32 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmplatedataTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.PlatedataTest@15710fc]" name="afterMethod" is-config="true" duration-ms="1408" started-at="2023-01-31T11:07:32 EET" finished-at="2023-01-31T11:07:33 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.PlatedataTest.ConfirmplatedataTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmplatedataTest status=SUCCESS method=PlatedataTest.ConfirmplatedataTest()[pri:12, instance:RTA.PlatedataTest@15710fc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.PlatedataTest -->
      <class name="RTA.SelectColorTest">
        <test-method status="PASS" signature="ClickColorTest()[pri:1, instance:RTA.SelectColorTest@1040f2f]" name="ClickColorTest" duration-ms="389" started-at="2023-01-31T11:07:07 EET" finished-at="2023-01-31T11:07:08 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickColorTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.SelectColorTest@1040f2f]" name="afterMethod" is-config="true" duration-ms="1468" started-at="2023-01-31T11:07:08 EET" finished-at="2023-01-31T11:07:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.SelectColorTest.ClickColorTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickColorTest status=SUCCESS method=SelectColorTest.ClickColorTest()[pri:1, instance:RTA.SelectColorTest@1040f2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SelectColorItemTest()[pri:2, instance:RTA.SelectColorTest@1040f2f]" name="SelectColorItemTest" duration-ms="157" started-at="2023-01-31T11:07:09 EET" finished-at="2023-01-31T11:07:10 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectColorItemTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.SelectColorTest@1040f2f]" name="afterMethod" is-config="true" duration-ms="1433" started-at="2023-01-31T11:07:10 EET" finished-at="2023-01-31T11:07:11 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.SelectColorTest.SelectColorItemTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectColorItemTest status=SUCCESS method=SelectColorTest.SelectColorItemTest()[pri:2, instance:RTA.SelectColorTest@1040f2f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.SelectColorTest -->
      <class name="RTA.DownloadAndShareTest">
        <test-method status="PASS" signature="ClickDownloadTest()[pri:1, instance:RTA.DownloadAndShareTest@aa2946]" name="ClickDownloadTest" duration-ms="7577" started-at="2023-01-31T11:07:56 EET" finished-at="2023-01-31T11:08:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickDownloadTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.DownloadAndShareTest@aa2946]" name="afterMethod" is-config="true" duration-ms="1443" started-at="2023-01-31T11:08:03 EET" finished-at="2023-01-31T11:08:05 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.DownloadAndShareTest.ClickDownloadTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickDownloadTest status=SUCCESS method=DownloadAndShareTest.ClickDownloadTest()[pri:1, instance:RTA.DownloadAndShareTest@aa2946] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ClickShareTest()[pri:2, instance:RTA.DownloadAndShareTest@aa2946]" name="ClickShareTest" duration-ms="203" started-at="2023-01-31T11:08:05 EET" finished-at="2023-01-31T11:08:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickShareTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.DownloadAndShareTest@aa2946]" name="afterMethod" is-config="true" duration-ms="1450" started-at="2023-01-31T11:08:05 EET" finished-at="2023-01-31T11:08:07 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.DownloadAndShareTest.ClickShareTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickShareTest status=SUCCESS method=DownloadAndShareTest.ClickShareTest()[pri:2, instance:RTA.DownloadAndShareTest@aa2946] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="CopyLinkTest()[pri:3, instance:RTA.DownloadAndShareTest@aa2946]" name="CopyLinkTest" duration-ms="695" started-at="2023-01-31T11:08:07 EET" finished-at="2023-01-31T11:08:07 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CopyLinkTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.DownloadAndShareTest@aa2946]" name="afterMethod" is-config="true" duration-ms="1425" started-at="2023-01-31T11:08:07 EET" finished-at="2023-01-31T11:08:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.DownloadAndShareTest.CopyLinkTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=CopyLinkTest status=SUCCESS method=DownloadAndShareTest.CopyLinkTest()[pri:3, instance:RTA.DownloadAndShareTest@aa2946] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.DownloadAndShareTest -->
      <class name="RTA.OwnerDataTest">
        <test-method status="PASS" signature="AddOwnerNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:RTA.OwnerDataTest@c87930]" name="AddOwnerNameTest" duration-ms="762" started-at="2023-01-31T11:07:11 EET" data-provider="CompleteVehicleData" finished-at="2023-01-31T11:07:12 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[EDAH6666888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amira Kamal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[011156612121]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656596]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8787]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[court]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Reason]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[667]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[adding notes in General ]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Adding Custody Notes In custody]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddOwnerNameTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.OwnerDataTest@c87930]" name="afterMethod" is-config="true" duration-ms="1410" started-at="2023-01-31T11:07:12 EET" finished-at="2023-01-31T11:07:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.OwnerDataTest.AddOwnerNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AddOwnerNameTest status=SUCCESS method=OwnerDataTest.AddOwnerNameTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:1, instance:RTA.OwnerDataTest@c87930] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.OwnerDataTest -->
      <class name="login.ClickloginbuttonfromHomescreenTest">
        <test-method status="PASS" signature="clcikLogin()[pri:2, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="clcikLogin" duration-ms="2857" started-at="2023-01-31T11:04:20 EET" finished-at="2023-01-31T11:04:23 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcikLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="afterMethod" is-config="true" duration-ms="1472" started-at="2023-01-31T11:04:23 EET" finished-at="2023-01-31T11:04:24 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clcikLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcikLogin status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clcikLogin()[pri:2, instance:login.ClickloginbuttonfromHomescreenTest@40b76e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="add_RTA_MobileNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="add_RTA_MobileNumber" duration-ms="912" started-at="2023-01-31T11:04:25 EET" data-provider="RTA_Account" finished-at="2023-01-31T11:04:26 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amiraaa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1017900001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4588]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[AA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add_RTA_MobileNumber -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="afterMethod" is-config="true" duration-ms="1543" started-at="2023-01-31T11:04:26 EET" finished-at="2023-01-31T11:04:27 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.add_RTA_MobileNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=add_RTA_MobileNumber status=SUCCESS method=ClickloginbuttonfromHomescreenTest.add_RTA_MobileNumber(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:7, instance:login.ClickloginbuttonfromHomescreenTest@40b76e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="clickContinue" duration-ms="886" started-at="2023-01-31T11:04:27 EET" finished-at="2023-01-31T11:04:28 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clickContinue -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="afterMethod" is-config="true" duration-ms="1558" started-at="2023-01-31T11:04:28 EET" finished-at="2023-01-31T11:04:30 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.clickContinue()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clickContinue status=SUCCESS method=ClickloginbuttonfromHomescreenTest.clickContinue()[pri:8, instance:login.ClickloginbuttonfromHomescreenTest@40b76e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="getotpRTA(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="getotpRTA" duration-ms="9121" started-at="2023-01-31T11:04:30 EET" data-provider="RTA_Account" finished-at="2023-01-31T11:04:39 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Amiraaa]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[1017900001]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[4588]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[11]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[AA]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getotpRTA -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:login.ClickloginbuttonfromHomescreenTest@40b76e]" name="afterMethod" is-config="true" duration-ms="1453" started-at="2023-01-31T11:04:39 EET" finished-at="2023-01-31T11:04:40 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void login.ClickloginbuttonfromHomescreenTest.getotpRTA(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) throws java.io.IOException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=getotpRTA status=SUCCESS method=ClickloginbuttonfromHomescreenTest.getotpRTA(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:9, instance:login.ClickloginbuttonfromHomescreenTest@40b76e] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- login.ClickloginbuttonfromHomescreenTest -->
      <class name="RTA.ConfirmVehicleTest">
        <test-method status="PASS" signature="confirmVehicleTest()[pri:1, instance:RTA.ConfirmVehicleTest@cff1a]" name="confirmVehicleTest" duration-ms="290" started-at="2023-01-31T11:07:13 EET" finished-at="2023-01-31T11:07:13 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- confirmVehicleTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ConfirmVehicleTest@cff1a]" name="afterMethod" is-config="true" duration-ms="1431" started-at="2023-01-31T11:07:13 EET" finished-at="2023-01-31T11:07:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ConfirmVehicleTest.confirmVehicleTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=confirmVehicleTest status=SUCCESS method=ConfirmVehicleTest.confirmVehicleTest()[pri:1, instance:RTA.ConfirmVehicleTest@cff1a] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.ConfirmVehicleTest -->
      <class name="RTA.SelectYearTest">
        <test-method status="PASS" signature="ClickYearTest()[pri:1, instance:RTA.SelectYearTest@17632c9]" name="ClickYearTest" duration-ms="1352" started-at="2023-01-31T11:07:01 EET" finished-at="2023-01-31T11:07:03 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ClickYearTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.SelectYearTest@17632c9]" name="afterMethod" is-config="true" duration-ms="1384" started-at="2023-01-31T11:07:03 EET" finished-at="2023-01-31T11:07:04 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.SelectYearTest.ClickYearTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ClickYearTest status=SUCCESS method=SelectYearTest.ClickYearTest()[pri:1, instance:RTA.SelectYearTest@17632c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="SelectYearItemTest()[pri:2, instance:RTA.SelectYearTest@17632c9]" name="SelectYearItemTest" duration-ms="275" started-at="2023-01-31T11:07:04 EET" finished-at="2023-01-31T11:07:04 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SelectYearItemTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.SelectYearTest@17632c9]" name="afterMethod" is-config="true" duration-ms="1431" started-at="2023-01-31T11:07:04 EET" finished-at="2023-01-31T11:07:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.SelectYearTest.SelectYearItemTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=SelectYearItemTest status=SUCCESS method=SelectYearTest.SelectYearItemTest()[pri:2, instance:RTA.SelectYearTest@17632c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.SelectYearTest -->
      <class name="common.allowLocationPermissionTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:common.allowLocationPermissionTest@a664f2]" name="beforeSuite" is-config="true" duration-ms="128" started-at="2023-01-31T11:04:06 EET" finished-at="2023-01-31T11:04:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,boolean,boolean,java.lang.String)[pri:0, instance:common.allowLocationPermissionTest@a664f2]" name="beforeClass" is-config="true" duration-ms="9007" started-at="2023-01-31T11:04:06 EET" finished-at="2023-01-31T11:04:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[Galaxy Note9 Testing]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[3232314f42423498]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[false]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="clcallowLocationPermissionTestLogin()[pri:2, instance:common.allowLocationPermissionTest@a664f2]" name="clcallowLocationPermissionTestLogin" duration-ms="2924" started-at="2023-01-31T11:04:15 EET" finished-at="2023-01-31T11:04:18 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- clcallowLocationPermissionTestLogin -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:common.allowLocationPermissionTest@a664f2]" name="afterMethod" is-config="true" duration-ms="1706" started-at="2023-01-31T11:04:18 EET" finished-at="2023-01-31T11:04:20 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void common.allowLocationPermissionTest.clcallowLocationPermissionTestLogin()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=clcallowLocationPermissionTestLogin status=SUCCESS method=allowLocationPermissionTest.clcallowLocationPermissionTestLogin()[pri:2, instance:common.allowLocationPermissionTest@a664f2] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:common.allowLocationPermissionTest@a664f2]" name="afterTest" is-config="true" duration-ms="0" started-at="2023-01-31T11:08:09 EET" finished-at="2023-01-31T11:08:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:common.allowLocationPermissionTest@a664f2]" name="afterSuite" is-config="true" duration-ms="221" started-at="2023-01-31T11:08:09 EET" finished-at="2023-01-31T11:08:09 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- common.allowLocationPermissionTest -->
      <class name="RTA.ImpoundDataTest">
        <test-method status="PASS" signature="switchcustudyToggleOn()[pri:1, instance:RTA.ImpoundDataTest@1f9eccc]" name="switchcustudyToggleOn" duration-ms="218" started-at="2023-01-31T11:07:38 EET" finished-at="2023-01-31T11:07:39 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- switchcustudyToggleOn -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="1397" started-at="2023-01-31T11:07:39 EET" finished-at="2023-01-31T11:07:40 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.switchcustudyToggleOn()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=switchcustudyToggleOn status=SUCCESS method=ImpoundDataTest.switchcustudyToggleOn()[pri:1, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="takeImage()[pri:2, instance:RTA.ImpoundDataTest@1f9eccc]" name="takeImage" duration-ms="279" started-at="2023-01-31T11:07:40 EET" finished-at="2023-01-31T11:07:40 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="2559" started-at="2023-01-31T11:07:40 EET" finished-at="2023-01-31T11:07:43 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.takeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=takeImage status=SUCCESS method=ImpoundDataTest.takeImage()[pri:2, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="cameraTakeImage()[pri:3, instance:RTA.ImpoundDataTest@1f9eccc]" name="cameraTakeImage" duration-ms="1146" started-at="2023-01-31T11:07:43 EET" finished-at="2023-01-31T11:07:44 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cameraTakeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="3328" started-at="2023-01-31T11:07:44 EET" finished-at="2023-01-31T11:07:47 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.cameraTakeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=cameraTakeImage status=SUCCESS method=ImpoundDataTest.cameraTakeImage()[pri:3, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmImage()[pri:4, instance:RTA.ImpoundDataTest@1f9eccc]" name="ConfirmImage" duration-ms="559" started-at="2023-01-31T11:07:47 EET" finished-at="2023-01-31T11:07:48 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="1357" started-at="2023-01-31T11:07:48 EET" finished-at="2023-01-31T11:07:49 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.ConfirmImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmImage status=SUCCESS method=ImpoundDataTest.ConfirmImage()[pri:4, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="AddcustodyNoteTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:RTA.ImpoundDataTest@1f9eccc]" name="AddcustodyNoteTest" duration-ms="1883" started-at="2023-01-31T11:07:49 EET" data-provider="CompleteVehicleData" finished-at="2023-01-31T11:07:51 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[EDAH6666888]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Amira Kamal]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[011156612121]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[656596]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[8787]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[court]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[Reason]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[667]]>
              </value>
            </param>
            <param index="8">
              <value>
                <![CDATA[adding notes in General ]]>
              </value>
            </param>
            <param index="9">
              <value>
                <![CDATA[Adding Custody Notes In custody]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddcustodyNoteTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="1441" started-at="2023-01-31T11:07:51 EET" finished-at="2023-01-31T11:07:53 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.AddcustodyNoteTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=AddcustodyNoteTest status=SUCCESS method=ImpoundDataTest.AddcustodyNoteTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:5, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmcustodyTest()[pri:6, instance:RTA.ImpoundDataTest@1f9eccc]" name="ConfirmcustodyTest" duration-ms="174" started-at="2023-01-31T11:07:53 EET" finished-at="2023-01-31T11:07:53 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmcustodyTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="1469" started-at="2023-01-31T11:07:53 EET" finished-at="2023-01-31T11:07:54 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.ConfirmcustodyTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmcustodyTest status=SUCCESS method=ImpoundDataTest.ConfirmcustodyTest()[pri:6, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="FinishTest()[pri:7, instance:RTA.ImpoundDataTest@1f9eccc]" name="FinishTest" duration-ms="271" started-at="2023-01-31T11:07:54 EET" finished-at="2023-01-31T11:07:54 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FinishTest -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImpoundDataTest@1f9eccc]" name="afterMethod" is-config="true" duration-ms="1391" started-at="2023-01-31T11:07:54 EET" finished-at="2023-01-31T11:07:56 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImpoundDataTest.FinishTest()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=FinishTest status=SUCCESS method=ImpoundDataTest.FinishTest()[pri:7, instance:RTA.ImpoundDataTest@1f9eccc] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.ImpoundDataTest -->
      <class name="RTA.ImageHappyPathTest">
        <test-method status="PASS" signature="takeImage()[pri:1, instance:RTA.ImageHappyPathTest@1ee392b]" name="takeImage" duration-ms="116" started-at="2023-01-31T11:05:05 EET" finished-at="2023-01-31T11:05:05 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- takeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImageHappyPathTest@1ee392b]" name="afterMethod" is-config="true" duration-ms="1381" started-at="2023-01-31T11:05:05 EET" finished-at="2023-01-31T11:05:06 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImageHappyPathTest.takeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=takeImage status=SUCCESS method=ImageHappyPathTest.takeImage()[pri:1, instance:RTA.ImageHappyPathTest@1ee392b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="allowcameraPermission()[pri:2, instance:RTA.ImageHappyPathTest@1ee392b]" name="allowcameraPermission" duration-ms="252" started-at="2023-01-31T11:05:06 EET" finished-at="2023-01-31T11:05:06 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- allowcameraPermission -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImageHappyPathTest@1ee392b]" name="afterMethod" is-config="true" duration-ms="2781" started-at="2023-01-31T11:05:06 EET" finished-at="2023-01-31T11:05:09 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImageHappyPathTest.allowcameraPermission()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=allowcameraPermission status=SUCCESS method=ImageHappyPathTest.allowcameraPermission()[pri:2, instance:RTA.ImageHappyPathTest@1ee392b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="cameraTakeImage()[pri:3, instance:RTA.ImageHappyPathTest@1ee392b]" name="cameraTakeImage" duration-ms="1191" started-at="2023-01-31T11:05:09 EET" finished-at="2023-01-31T11:05:10 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cameraTakeImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImageHappyPathTest@1ee392b]" name="afterMethod" is-config="true" duration-ms="3202" started-at="2023-01-31T11:05:10 EET" finished-at="2023-01-31T11:05:13 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImageHappyPathTest.cameraTakeImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=cameraTakeImage status=SUCCESS method=ImageHappyPathTest.cameraTakeImage()[pri:3, instance:RTA.ImageHappyPathTest@1ee392b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmImage()[pri:4, instance:RTA.ImageHappyPathTest@1ee392b]" name="ConfirmImage" duration-ms="415" started-at="2023-01-31T11:05:13 EET" finished-at="2023-01-31T11:05:14 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmImage -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImageHappyPathTest@1ee392b]" name="afterMethod" is-config="true" duration-ms="1452" started-at="2023-01-31T11:05:14 EET" finished-at="2023-01-31T11:05:15 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImageHappyPathTest.ConfirmImage()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmImage status=SUCCESS method=ImageHappyPathTest.ConfirmImage()[pri:4, instance:RTA.ImageHappyPathTest@1ee392b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="ConfirmImagebutton()[pri:5, instance:RTA.ImageHappyPathTest@1ee392b]" name="ConfirmImagebutton" duration-ms="351" started-at="2023-01-31T11:05:15 EET" finished-at="2023-01-31T11:05:16 EET">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ConfirmImagebutton -->
        <test-method status="PASS" signature="afterMethod(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:RTA.ImageHappyPathTest@1ee392b]" name="afterMethod" is-config="true" duration-ms="1468" started-at="2023-01-31T11:05:16 EET" finished-at="2023-01-31T11:05:17 EET">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void RTA.ImageHappyPathTest.ConfirmImagebutton()]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=ConfirmImagebutton status=SUCCESS method=ImageHappyPathTest.ConfirmImagebutton()[pri:5, instance:RTA.ImageHappyPathTest@1ee392b] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- RTA.ImageHappyPathTest -->
    </test> <!-- login -->
  </suite> <!-- RTA_OneRequest_Complete_Vehicle_Data -->
</testng-results>
